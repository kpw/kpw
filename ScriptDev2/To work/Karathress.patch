Index: .
===================================================================
--- .        (revision 623)
+++ .        (working copy)
@@ -16,53 +16,81 @@
 
 /* ScriptData
 SDName: Boss_Fathomlord_Karathress
-SD%Complete: 50
-SDComment: Missing Multishot, pet, Totems, Windfury, Whirlwind
+SD%Complete: 60
+SDComment: 
 SDCategory: Coilfang Resevoir, Serpent Shrine Cavern
 EndScriptData */
 
 #include "precompiled.h"
 #include "def_serpent_shrine.h"
+#include "../../../npc/npc_escortAI.h"
 
 //Karathress spells
-#define SPELL_CATACLYSMIC_BOLT     38441
-#define SPELL_POWER_OF_SHARKKIS    38455
-#define SPELL_POWER_OF_TIDALVESS   38452
-#define SPELL_POWER_OF_CARIBDIS    38451
-#define SPELL_ENRAGE               24318
+#define SPELL_CATACLYSMIC_BOLT          38441
+#define SPELL_POWER_OF_SHARKKIS         38455
+#define SPELL_POWER_OF_TIDALVESS        38452
+#define SPELL_POWER_OF_CARIBDIS         38451
+#define SPELL_ENRAGE                    24318
+#define SPELL_SEAR_NOVA                 38445
+#define SPELL_BLESSING_OF_THE_TIDES     38449
+
 //Sharkkis spells
-#define SPELL_LEECHING_THROW       29436
-#define SPELL_THE_BEAST_WITHIN     38373
+#define SPELL_LEECHING_THROW            29436
+#define SPELL_MULTISHOT                 38366
+#define SPELL_THE_BEAST_WITHIN          38373
+#define SPELL_SUMMON_FATHOM_LURKER      38433
+#define SPELL_SUMMON_FATHOM_SPOREBAT    38431
+#define SPELL_PET_ENRAGE                19574
+
 //Tidalvess spells
-#define SPELL_FROST_SHOCK          38234
+#define SPELL_FROST_SHOCK               38234
+#define SPELL_SPITFIRE_TOTEM                    38236
+#define SPELL_POISON_CLEANSING_TOTEM    38306
+#define SPELL_POISON_CLEANSING_EFFECT   8167
+#define SPELL_EARTHBIND_TOTEM           38304
+#define SPELL_EARTHBIND_TOTEM_EFFECT    6474
+#define SPELL_WINDFURY_WEAPON           32911
+
 //Caribdis Spells
-#define SPELL_WATER_BOLT_VOLLEY    38335
-#define SPELL_TIDAL_SURGE          38353
-#define SPELL_HEAL                 41386
+#define SPELL_WATER_BOLT_VOLLEY         38335
+#define SPELL_TIDAL_SURGE               38358
+#define SPELL_TIDAL_SURGE_FREEZE        38357
+#define SPELL_HEAL                      41386
+#define SPELL_SUMMON_CYCLONE            38337
+#define SPELL_CYCLONE_CYCLONE           29538
 
-#define SAY_AGGRO                  "Guards, attention! We have visitors..."
-#define SAY_SLAY1                  "I am rid of you."
-#define SAY_GAIN_ABILITY1          "I am more powerful than ever!"
-#define SAY_GAIN_ABILITY2          "Go on, kill them! I'll be the better for it!"
-#define SAY_GAIN_ABILITY3          "More knowledge, more power!"
-#define SAY_DEATH                  "Her ... excellency ... awaits!"
+//Summoned Unit GUIDs
+#define CREATURE_CYCLONE                22104
+#define CREATURE_FATHOM_SPOREBAT        22120
+#define CREATURE_FATHOM_LURKER          22119
+#define CREATURE_SPITFIRE_TOTEM         22091
+#define CREATURE_EARTHBIND_TOTEM        22486
+#define CREATURE_POISON_CLEANSING_TOTEM 22487
 
-#define SOUND_AGGRO                11277
-#define SOUND_PLYR_ATTACK          11278
-#define SOUND_GAIN_ABILITY1        11279
-#define SOUND_GAIN_ABILITY2        11280
-#define SOUND_GAIN_ABILITY3        11281
-#define SOUND_SLAY1                11282
-#define SOUND_SLAY2                11283
-#define SOUND_SLAY3                11284
-#define SOUND_DEATH                11285
+#define SAY_AGGRO                       "Guards, attention! We have visitors..."
+#define SAY_SLAY1                       "I am rid of you."
+#define SAY_GAIN_ABILITY1               "I am more powerful than ever!"
+#define SAY_GAIN_ABILITY2               "Go on, kill them! I'll be the better for it!"
+#define SAY_GAIN_ABILITY3               "More knowledge, more power!"
+#define SAY_DEATH                       "Her ... excellency ... awaits!"
+#define SAY_BLESSING_OF_TIDES           "Your overconfidence will be your undoing! Guards, lend me your strength!"
 
+#define SOUND_AGGRO                     11277
+#define SOUND_PLYR_ATTACK               11278
+#define SOUND_GAIN_ABILITY1             11279
+#define SOUND_GAIN_ABILITY2             11280
+#define SOUND_GAIN_ABILITY3             11281
+#define SOUND_SLAY1                     11282
+#define SOUND_SLAY2                     11283
+#define SOUND_SLAY3                     11284
+#define SOUND_DEATH                     11285
+
 //entry and position for Seer Olum
-#define SEER_OLUM                  22820
-#define OLUM_X                     446.78f
-#define OLUM_Y                     -542.76f
-#define OLUM_Z                     -7.54773f
-#define OLUM_O                     0.401581f
+#define SEER_OLUM                       22820
+#define OLUM_X                          446.78f
+#define OLUM_Y                          -542.76f
+#define OLUM_Z                          -7.54773f
+#define OLUM_O                          0.401581f
 
 //Fathom-Lord Karathress AI
 struct MANGOS_DLL_DECL boss_fathomlord_karathressAI : public ScriptedAI
@@ -80,6 +108,9 @@
 
     uint32 CataclysmicBolt_Timer;
     uint32 Enrage_Timer;
+        uint32 SearNova_Timer;
+        
+        bool BlessingOfTides;
 
     uint64 Advisors[3];
 
@@ -87,26 +118,34 @@
     {
         CataclysmicBolt_Timer = 10000;
         Enrage_Timer = 600000; //10 minutes
+                SearNova_Timer = 20000+rand()%40000; // 20 - 60 seconds
+                BlessingOfTides = false;
 
-        Creature* Advisor;
-        for(uint8 i = 0; i < 3; ++i)
-            if(Advisors[i])
+        if(pInstance)
+        {
+                        uint64 RAdvisors[3];
+                        RAdvisors[0] = pInstance->GetData64(DATA_SHARKKIS);
+                        RAdvisors[1] = pInstance->GetData64(DATA_TIDALVESS);
+                        RAdvisors[2] = pInstance->GetData64(DATA_CARIBDIS);
+                        //Respawn of the 3 Advisors
+                        Creature* pAdvisor = NULL;
+                        for( int i=0; i<3; i++ )
             {
-                Advisor = ((Creature*)Unit::GetUnit(*m_creature, Advisors[i]));
-                if(Advisor)
-                {
-                    if(Advisor->isAlive())
-                    {
-                        Advisor->DealDamage(Advisor, Advisor->GetHealth(), NULL, DIRECT_DAMAGE, SPELL_SCHOOL_MASK_NORMAL, NULL, false);
-                        Advisor->RemoveCorpse();
-                        Advisor->Respawn();
-                    }
-                    Advisor->AI()->EnterEvadeMode();
-                }
-            }
+                                if(RAdvisors[i])
+                                {
+                                        pAdvisor = ((Creature*)Unit::GetUnit((*m_creature), RAdvisors[i]));
+                                        if(pAdvisor && !pAdvisor->isAlive())
+                                        {
+                                                pAdvisor->Respawn();
+                                                pAdvisor->AI()->EnterEvadeMode();
+                                                pAdvisor->GetMotionMaster()->MoveTargetedHome();
+                                        }
+                                }
+                        }
 
-        if( pInstance )
-            pInstance->SetData(DATA_KARATHRESSEVENT, NOT_STARTED);
+                        pInstance->SetData(DATA_KARATHRESSEVENT, NOT_STARTED);
+                }
+            
     }
 
     void EventSharkkisDeath()
@@ -232,6 +271,13 @@
             CataclysmicBolt_Timer = 10000;
         }else CataclysmicBolt_Timer -= diff;
 
+                //SearNova_Timer
+                if(SearNova_Timer < diff)
+                {
+                        DoCast(m_creature->getVictim(), SPELL_SEAR_NOVA);
+                        SearNova_Timer = 20000+rand()%40000;
+                }else SearNova_Timer -= diff;
+
         //Enrage_Timer
         if(Enrage_Timer < diff)
         {
@@ -239,6 +285,33 @@
             Enrage_Timer = 90000;
         }else Enrage_Timer -= diff;
 
+                //Blessing of Tides Trigger
+                if ((m_creature->GetHealth()*100 / m_creature->GetMaxHealth()) <= 75 && !BlessingOfTides)
+                {
+                        BlessingOfTides = true;
+                        bool continueTriggering;
+                        Creature* Advisor;
+                        for(uint8 i = 0; i < 4; ++i)
+                                if(Advisors[i])
+                                {
+                                        Advisor = ((Creature*)Unit::GetUnit(*m_creature, Advisors[i]));
+                                        if(Advisor)
+                                        {
+                                                if(Advisor->isAlive())
+                                                {
+                                                        continueTriggering = true;
+                                                        break;
+                                                }
+                                        }
+                                }
+
+                        if( continueTriggering )
+                        {
+                                DoCast(m_creature, SPELL_BLESSING_OF_THE_TIDES);
+                                DoYell(SAY_BLESSING_OF_TIDES, LANG_UNIVERSAL, NULL);
+                        }
+                }
+
         DoMeleeAttackIfReady();
     }
 };
@@ -256,12 +329,27 @@
 
     uint32 LeechingThrow_Timer;
     uint32 TheBeastWithin_Timer;
+        uint32 Multishot_Timer;
+        uint32 Pet_Timer;
+        bool pet;
+        uint64 SummonedPet;
 
     void Reset()
     {
         LeechingThrow_Timer = 20000;
         TheBeastWithin_Timer = 30000;
+                Multishot_Timer = 15000;
+                Pet_Timer = 10000;
+                pet = false;
 
+                Creature *Pet = (Creature*) Unit::GetUnit(*m_creature, SummonedPet);
+                if( Pet && Pet->isAlive() )
+                {
+                        Pet->DealDamage( Pet, Pet->GetHealth(), NULL, DIRECT_DAMAGE, SPELL_SCHOOL_MASK_NORMAL, NULL, false );
+                }
+
+                SummonedPet = 0;
+
         if( pInstance )
             pInstance->SetData(DATA_KARATHRESSEVENT, NOT_STARTED);
     }
@@ -272,8 +360,8 @@
         {
             Creature *Karathress = NULL;
             Karathress = (Creature*)(Unit::GetUnit((*m_creature), pInstance->GetData64(DATA_KARATHRESS)));
-
-            if(Karathress)
+                        
+                        if(!m_creature->isAlive() && Karathress)
                 ((boss_fathomlord_karathressAI*)Karathress->AI())->EventSharkkisDeath();
         }
     }
@@ -314,14 +402,53 @@
             DoCast(m_creature->getVictim(), SPELL_LEECHING_THROW);
             LeechingThrow_Timer = 20000;
         }else LeechingThrow_Timer -= diff;
+                
+                //Multishot_Timer
+                if(Multishot_Timer < diff)
+                {
+                        DoCast(m_creature->getVictim(), SPELL_MULTISHOT);
+                        Multishot_Timer = 20000;
+                }else Multishot_Timer -= diff;
 
         //TheBeastWithin_Timer
         if(TheBeastWithin_Timer < diff)
         {
             DoCast(m_creature, SPELL_THE_BEAST_WITHIN);
+                        Creature *Pet = (Creature*) Unit::GetUnit(*m_creature, SummonedPet);
+                        if( Pet && Pet->isAlive() )
+                        {
+                                Pet->CastSpell( Pet, SPELL_PET_ENRAGE, true );
+                        }
             TheBeastWithin_Timer = 30000;
         }else TheBeastWithin_Timer -= diff;
 
+                //Pet_Timer
+                if(Pet_Timer < diff && pet == false)
+                {
+                        pet = true;
+                        //uint32 spell_id;
+                        uint32 pet_id;
+                        switch( rand()%2 )
+                        {
+                                case 0:
+                                        //spell_id = SPELL_SUMMON_FATHOM_LURKER;
+                                        pet_id = CREATURE_FATHOM_LURKER;
+                                        break;
+                                case 1:
+                                        //spell_id = SPELL_SUMMON_FATHOM_SPOREBAT;
+                                        pet_id = CREATURE_FATHOM_SPOREBAT;
+                                        break;
+                        }
+                        //DoCast( m_creature, spell_id, true );
+                        Creature *Pet = DoSpawnCreature(pet_id,0,0,0,0, TEMPSUMMON_TIMED_DESPAWN_OUT_OF_COMBAT, 15000 );
+                        Unit* target = SelectUnit(SELECT_TARGET_RANDOM,0);
+                        if (Pet && target)
+                        {
+                                Pet->AI()->AttackStart(target);
+                                SummonedPet = Pet->GetGUID();
+                        }
+                }else Pet_Timer -= diff;
+
         DoMeleeAttackIfReady();
     }
 };
@@ -338,10 +465,16 @@
     ScriptedInstance* pInstance;
 
     uint32 FrostShock_Timer;
+        uint32 Spitfire_Timer;
+        uint32 PoisonCleansing_Timer;
+        uint32 Earthbind_Timer;
 
     void Reset()
     {
         FrostShock_Timer = 25000;
+                Spitfire_Timer = 60000;
+                PoisonCleansing_Timer = 30000;
+                Earthbind_Timer = 45000;
 
         if( pInstance )
             pInstance->SetData(DATA_KARATHRESSEVENT, NOT_STARTED);
@@ -354,7 +487,7 @@
             Creature *Karathress = NULL;
             Karathress = (Creature*)(Unit::GetUnit((*m_creature), pInstance->GetData64(DATA_KARATHRESS)));
 
-            if(Karathress)
+            if(!m_creature->isAlive() && Karathress)
                 ((boss_fathomlord_karathressAI*)Karathress->AI())->EventTidalvessDeath();
         }
     }
@@ -366,6 +499,8 @@
             pInstance->SetData64(DATA_KARATHRESSEVENT_STARTER, who->GetGUID());
             pInstance->SetData(DATA_KARATHRESSEVENT, IN_PROGRESS);
         }
+
+                DoCast(m_creature, SPELL_WINDFURY_WEAPON);
     }
 
     void UpdateAI(const uint32 diff)
@@ -389,6 +524,11 @@
         if(pInstance && !pInstance->GetData(DATA_KARATHRESSEVENT))
             EnterEvadeMode();
 
+                if( !m_creature->HasAura(SPELL_WINDFURY_WEAPON, 0) )
+                {
+                        DoCast(m_creature, SPELL_WINDFURY_WEAPON);
+                }
+
         //FrostShock_Timer
         if(FrostShock_Timer < diff)
         {
@@ -396,6 +536,42 @@
             FrostShock_Timer = 25000+rand()%5000;
         }else FrostShock_Timer -= diff;
 
+                //Spitfire_Timer
+                if(Spitfire_Timer < diff)
+                {
+                        DoCast(m_creature, SPELL_SPITFIRE_TOTEM);
+                        Unit *SpitfireTotem = Unit::GetUnit( *m_creature, CREATURE_SPITFIRE_TOTEM );
+                        if( SpitfireTotem )
+                        {
+                                ((Creature*)SpitfireTotem)->AI()->AttackStart( m_creature->getVictim() );
+                        }
+                        Spitfire_Timer = 60000;
+                }else Spitfire_Timer -= diff;
+
+                //PoisonCleansing_Timer
+                if(PoisonCleansing_Timer < diff)
+                {
+                        DoCast(m_creature, SPELL_POISON_CLEANSING_TOTEM);
+                        Unit *PoisonCleansingTotem = Unit::GetUnit( *m_creature, CREATURE_POISON_CLEANSING_TOTEM );
+                        if( PoisonCleansingTotem )
+                        {
+                                PoisonCleansingTotem->CastSpell( PoisonCleansingTotem, SPELL_POISON_CLEANSING_EFFECT, true );
+                        }
+                        PoisonCleansing_Timer = 30000;
+                }else PoisonCleansing_Timer -= diff;
+
+                //Earthbind_Timer
+                if(Earthbind_Timer < diff)
+                {
+                        DoCast(m_creature, SPELL_EARTHBIND_TOTEM);
+                        Unit *EarthbindTotem = Unit::GetUnit( *m_creature, CREATURE_EARTHBIND_TOTEM );
+                        if( EarthbindTotem )
+                        {
+                                EarthbindTotem->CastSpell( EarthbindTotem, SPELL_EARTHBIND_TOTEM_EFFECT, true );
+                        }
+                        Earthbind_Timer = 45000;
+                }else Earthbind_Timer -= diff;
+
         DoMeleeAttackIfReady();
     }
 };
@@ -414,12 +590,14 @@
     uint32 WaterBoltVolley_Timer;
     uint32 TidalSurge_Timer;
     uint32 Heal_Timer;
+        uint32 Cyclone_Timer;
 
     void Reset()
     {
         WaterBoltVolley_Timer = 35000;
         TidalSurge_Timer = 15000+rand()%5000;
         Heal_Timer = 55000;
+                Cyclone_Timer = 30000+rand()%10000;
 
         if(pInstance)
             pInstance->SetData(DATA_KARATHRESSEVENT, NOT_STARTED);
@@ -432,7 +610,7 @@
             Creature *Karathress = NULL;
             Karathress = (Creature*)(Unit::GetUnit((*m_creature), pInstance->GetData64(DATA_KARATHRESS)));
 
-            if(Karathress)
+            if(!m_creature->isAlive() && Karathress)
                 ((boss_fathomlord_karathressAI*)Karathress->AI())->EventCaribdisDeath();
         }
     }
@@ -478,45 +656,79 @@
         if(TidalSurge_Timer < diff)
         {
             DoCast(m_creature->getVictim(), SPELL_TIDAL_SURGE);
+                        // Hacky way to do it - won't trigger elseways
+                        m_creature->getVictim()->CastSpell( m_creature->getVictim(), SPELL_TIDAL_SURGE_FREEZE, true );
             TidalSurge_Timer = 15000+rand()%5000;
         }else TidalSurge_Timer -= diff;
 
+                //Cyclone_Timer
+        if(Cyclone_Timer < diff)
+        {
+            //DoCast(m_creature, SPELL_SUMMON_CYCLONE); // Doesn't work
+            Cyclone_Timer = 30000+rand()%10000;
+                        Creature *Cyclone = m_creature->SummonCreature(CREATURE_CYCLONE, m_creature->GetPositionX(), m_creature->GetPositionY(), m_creature->GetPositionZ(), (rand()%5), TEMPSUMMON_TIMED_DESPAWN, 15000);
+                        if( Cyclone )
+                        {
+                                ((Creature*)Cyclone)->SetFloatValue(OBJECT_FIELD_SCALE_X, 3.0f);
+                                Cyclone->SetFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_NOT_SELECTABLE);
+                Cyclone->setFaction(m_creature->getFaction());
+                                Cyclone->CastSpell(Cyclone, SPELL_CYCLONE_CYCLONE, true);
+                                Unit *target = SelectUnit(SELECT_TARGET_RANDOM, 0);
+                                if( target )
+                                {
+                                        Cyclone->AI()->AttackStart(target);
+                                }
+                        }
+        }else Cyclone_Timer -= diff;
+                
+
         //Heal_Timer
         if(Heal_Timer < diff)
         {
             // It can be cast on any of the mobs
             Unit *pUnit = NULL;
 
-            if(pInstance)
+                        while( pUnit == NULL || !pUnit->isAlive() )
+                        {
+                                pUnit = selectAdvisorUnit();
+                        }
+
+            if(pUnit && pUnit->isAlive())
+                DoCast(pUnit, SPELL_HEAL);
+
+            Heal_Timer = 60000;
+        }else Heal_Timer -= diff;
+
+        DoMeleeAttackIfReady();
+    }
+
+        Unit* selectAdvisorUnit()
+        {
+                Unit* pUnit;
+                if(pInstance)
+        {
+            switch(rand()%4)
             {
-                switch(rand()%4)
-                {
-                    case 0:
-                    pUnit = Unit::GetUnit((*m_creature), pInstance->GetData64(DATA_KARATHRESS));
-                    break;
-                    
-                    case 1:
+                            case 0:
+                                    pUnit = Unit::GetUnit((*m_creature), pInstance->GetData64(DATA_KARATHRESS));
+                                        break;
+                  
+                case 1:
                     pUnit = Unit::GetUnit((*m_creature), pInstance->GetData64(DATA_SHARKKIS));
                     break;
 
-                    case 2:
+                case 2:
                     pUnit = Unit::GetUnit((*m_creature), pInstance->GetData64(DATA_TIDALVESS));
                     break;
 
-                    case 3:
+                case 3:
                     pUnit = m_creature;
                     break;
-                }
-            }else pUnit = m_creature;
+            }
+        }else pUnit = m_creature;
 
-            if(pUnit && pUnit->isAlive())
-                DoCast(pUnit, SPELL_HEAL);
-
-            Heal_Timer = 60000;
-        }else Heal_Timer -= diff;
-
-        DoMeleeAttackIfReady();
-    }
+                return pUnit;
+        }
 };
 
 CreatureAI* GetAI_boss_fathomlord_karathress(Creature *_Creature)